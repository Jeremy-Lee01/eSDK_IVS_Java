/**
 * Copyright 2015 Huawei Technologies Co., Ltd. All rights reserved.
 * eSDK is licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *   
 * http://www.apache.org/licenses/LICENSE-2.0
 *   
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package com.huawei.esdk.ivs.professional.local.impl.autogen;

import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;
import javax.xml.ws.Service;


/**
 * This class was generated by Apache CXF 2.6.10
 * 2014-01-06T23:40:36.116+08:00
 * Generated source version: 2.6.10
 * 
 */
@WebServiceClient(name = "eSDKService", 
                  wsdlLocation = "esdk_ivs_professional_native.wsdl",
                  targetNamespace = "esdk_ivs_professional_server") 
public class ESDKService extends Service {

    public final static URL WSDL_LOCATION;

    public final static QName SERVICE = new QName("esdk_ivs_professional_server", "eSDKService");
    public final static QName IVSProfessionalCommon = new QName("esdk_ivs_professional_server", "IVSProfessional.Common");
    public final static QName IVSProfessionalBusinessManager = new QName("esdk_ivs_professional_server", "IVSProfessional.BusinessManager");
    public final static QName IVSProfessionalAlarmManager = new QName("esdk_ivs_professional_server", "IVSProfessional.AlarmManager");
    public final static QName IVSProfessionalUserManager = new QName("esdk_ivs_professional_server", "IVSProfessional.UserManager");
    public final static QName IVSProfessionalDeviceManager = new QName("esdk_ivs_professional_server", "IVSProfessional.DeviceManager");
    public final static QName IVSProfessionalClusterManager = new QName("esdk_ivs_professional_server", "IVSProfessional.ClusterManager");
    public final static QName IVSProfessionalRecordManager = new QName("esdk_ivs_professional_server", "IVSProfessional.RecordManager");
    static {
        URL url = ESDKService.class.getResource("esdk_ivs_professional_native.wsdl");
        if (url == null) {
            url = ESDKService.class.getClassLoader().getResource("esdk_ivs_professional_native.wsdl");
        } 
        if (url == null) {
            java.util.logging.Logger.getLogger(ESDKService.class.getName())
                .log(java.util.logging.Level.INFO, 
                     "Can not initialize the default wsdl from {0}", "esdk_ivs_professional_native.wsdl");
        }       
        WSDL_LOCATION = url;
    }

    public ESDKService(URL wsdlLocation) {
        super(wsdlLocation, SERVICE);
    }

    public ESDKService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public ESDKService() {
        super(WSDL_LOCATION, SERVICE);
    }
    
    //This constructor requires JAX-WS API 2.2. You will need to endorse the 2.2
    //API jar or re-run wsdl2java with "-frontend jaxws21" to generate JAX-WS 2.1
    //compliant code instead.
    public ESDKService(WebServiceFeature ... features) {
        super(WSDL_LOCATION, SERVICE);
    }

    //This constructor requires JAX-WS API 2.2. You will need to endorse the 2.2
    //API jar or re-run wsdl2java with "-frontend jaxws21" to generate JAX-WS 2.1
    //compliant code instead.
    public ESDKService(URL wsdlLocation, WebServiceFeature ... features) {
        super(wsdlLocation, SERVICE);
    }

    //This constructor requires JAX-WS API 2.2. You will need to endorse the 2.2
    //API jar or re-run wsdl2java with "-frontend jaxws21" to generate JAX-WS 2.1
    //compliant code instead.
    public ESDKService(URL wsdlLocation, QName serviceName, WebServiceFeature ... features) {
        super(wsdlLocation, serviceName);
    }

    /**
     *
     * @return
     *     returns IVSProfessionalCommon
     */
    @WebEndpoint(name = "IVSProfessional.Common")
    public IVSProfessionalCommon getIVSProfessionalCommon() {
        return super.getPort(IVSProfessionalCommon, IVSProfessionalCommon.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns IVSProfessionalCommon
     */
    @WebEndpoint(name = "IVSProfessional.Common")
    public IVSProfessionalCommon getIVSProfessionalCommon(WebServiceFeature... features) {
        return super.getPort(IVSProfessionalCommon, IVSProfessionalCommon.class, features);
    }
    /**
     *
     * @return
     *     returns IVSProfessionalBusinessManager
     */
    @WebEndpoint(name = "IVSProfessional.BusinessManager")
    public IVSProfessionalBusinessManager getIVSProfessionalBusinessManager() {
        return super.getPort(IVSProfessionalBusinessManager, IVSProfessionalBusinessManager.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns IVSProfessionalBusinessManager
     */
    @WebEndpoint(name = "IVSProfessional.BusinessManager")
    public IVSProfessionalBusinessManager getIVSProfessionalBusinessManager(WebServiceFeature... features) {
        return super.getPort(IVSProfessionalBusinessManager, IVSProfessionalBusinessManager.class, features);
    }
    /**
     *
     * @return
     *     returns IVSProfessionalAlarmManager
     */
    @WebEndpoint(name = "IVSProfessional.AlarmManager")
    public IVSProfessionalAlarmManager getIVSProfessionalAlarmManager() {
        return super.getPort(IVSProfessionalAlarmManager, IVSProfessionalAlarmManager.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns IVSProfessionalAlarmManager
     */
    @WebEndpoint(name = "IVSProfessional.AlarmManager")
    public IVSProfessionalAlarmManager getIVSProfessionalAlarmManager(WebServiceFeature... features) {
        return super.getPort(IVSProfessionalAlarmManager, IVSProfessionalAlarmManager.class, features);
    }
    /**
     *
     * @return
     *     returns IVSProfessionalUserManager
     */
    @WebEndpoint(name = "IVSProfessional.UserManager")
    public IVSProfessionalUserManager getIVSProfessionalUserManager() {
        return super.getPort(IVSProfessionalUserManager, IVSProfessionalUserManager.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns IVSProfessionalUserManager
     */
    @WebEndpoint(name = "IVSProfessional.UserManager")
    public IVSProfessionalUserManager getIVSProfessionalUserManager(WebServiceFeature... features) {
        return super.getPort(IVSProfessionalUserManager, IVSProfessionalUserManager.class, features);
    }
    /**
     *
     * @return
     *     returns IVSProfessionalDeviceManager
     */
    @WebEndpoint(name = "IVSProfessional.DeviceManager")
    public IVSProfessionalDeviceManager getIVSProfessionalDeviceManager() {
        return super.getPort(IVSProfessionalDeviceManager, IVSProfessionalDeviceManager.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns IVSProfessionalDeviceManager
     */
    @WebEndpoint(name = "IVSProfessional.DeviceManager")
    public IVSProfessionalDeviceManager getIVSProfessionalDeviceManager(WebServiceFeature... features) {
        return super.getPort(IVSProfessionalDeviceManager, IVSProfessionalDeviceManager.class, features);
    }
    /**
     *
     * @return
     *     returns IVSProfessionalClusterManager
     */
    @WebEndpoint(name = "IVSProfessional.ClusterManager")
    public IVSProfessionalClusterManager getIVSProfessionalClusterManager() {
        return super.getPort(IVSProfessionalClusterManager, IVSProfessionalClusterManager.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns IVSProfessionalClusterManager
     */
    @WebEndpoint(name = "IVSProfessional.ClusterManager")
    public IVSProfessionalClusterManager getIVSProfessionalClusterManager(WebServiceFeature... features) {
        return super.getPort(IVSProfessionalClusterManager, IVSProfessionalClusterManager.class, features);
    }
    /**
     *
     * @return
     *     returns IVSProfessionalRecordManager
     */
    @WebEndpoint(name = "IVSProfessional.RecordManager")
    public IVSProfessionalRecordManager getIVSProfessionalRecordManager() {
        return super.getPort(IVSProfessionalRecordManager, IVSProfessionalRecordManager.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns IVSProfessionalRecordManager
     */
    @WebEndpoint(name = "IVSProfessional.RecordManager")
    public IVSProfessionalRecordManager getIVSProfessionalRecordManager(WebServiceFeature... features) {
        return super.getPort(IVSProfessionalRecordManager, IVSProfessionalRecordManager.class, features);
    }

}
